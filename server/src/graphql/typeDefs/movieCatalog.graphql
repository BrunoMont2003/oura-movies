type Query {
  getMovieCatalogs: [MovieCatalog]
  getMovieCatalog(id: ID!): MovieCatalog
  getFavoriteMovies: [MovieCatalog]
  getPopularMovies: [MovieCatalog]
  getTrendingNowMovies: [MovieCatalog]
  getTopRatedMovies: [MovieCatalog]
}
type MovieCatalog {
  id: ID!
  original_language: String!
  original_title: String!
  overview: String!
  popularity: Float!
  poster_path: String!
  release_date: String!
  title: String!
  video: Boolean!
  vote_average: Float!
  vote_count: Int!
  user_id: ID
}

input CreateMovieCatalogInput {
  original_language: String!
  original_title: String!
  overview: String!
  popularity: Float!
  poster_path: String!
  release_date: String!
  title: String!
  video: Boolean!
  vote_average: Float!
  vote_count: Int!
  user_id: ID
}

input UpdateMovieCatalogInput {
  original_language: String
  original_title: String
  overview: String
  popularity: Float
  poster_path: String
  release_date: String
  title: String
  video: Boolean
  vote_average: Float
  vote_count: Int
}

type Mutation {
  addMovieCatalog(input: CreateMovieCatalogInput!): MovieCatalog
  updateMovieCatalog(id: ID!, input: UpdateMovieCatalogInput!): MovieCatalog
  deleteMovieCatalog(id: ID!): MovieCatalog
  addFavoriteMovie(movie_id: ID!): User
  removeFavoriteMovie(movie_id: ID!): User
}
